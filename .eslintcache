[{"/home/junho/Coding/ateam/src/index.js":"1","/home/junho/Coding/ateam/src/App.js":"2","/home/junho/Coding/ateam/src/styles/GlobalStyles.js":"3","/home/junho/Coding/ateam/src/styles/Theme.js":"4","/home/junho/Coding/ateam/src/components/organisms/Header.js":"5","/home/junho/Coding/ateam/src/pages/Dashboard.js":"6","/home/junho/Coding/ateam/src/components/atoms/Button.js":"7","/home/junho/Coding/ateam/src/components/molecules/Card.js":"8","/home/junho/Coding/ateam/src/components/atoms/Label.js":"9","/home/junho/Coding/ateam/src/components/organisms/CardList.js":"10","/home/junho/Coding/ateam/src/components/atoms/Select.js":"11","/home/junho/Coding/ateam/src/reducer/DashboardReducer.js":"12","/home/junho/Coding/ateam/src/reducer/store.js":"13","/home/junho/Coding/ateam/src/components/atoms/Switch.js":"14"},{"size":481,"mtime":1612378593733,"results":"15","hashOfConfig":"16"},{"size":307,"mtime":1612260671080,"results":"17","hashOfConfig":"16"},{"size":553,"mtime":1612356966573,"results":"18","hashOfConfig":"16"},{"size":390,"mtime":1612292939320,"results":"19","hashOfConfig":"16"},{"size":3764,"mtime":1612434636976,"results":"20","hashOfConfig":"16"},{"size":2491,"mtime":1612435598996,"results":"21","hashOfConfig":"16"},{"size":680,"mtime":1612376638103,"results":"22","hashOfConfig":"16"},{"size":2472,"mtime":1612360601433,"results":"23","hashOfConfig":"16"},{"size":429,"mtime":1612292090620,"results":"24","hashOfConfig":"16"},{"size":3770,"mtime":1612438279680,"results":"25","hashOfConfig":"16"},{"size":3797,"mtime":1612439254340,"results":"26","hashOfConfig":"16"},{"size":1231,"mtime":1612436046536,"results":"27","hashOfConfig":"16"},{"size":322,"mtime":1612378586343,"results":"28","hashOfConfig":"16"},{"size":1137,"mtime":1612439201850,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1duiejr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/junho/Coding/ateam/src/index.js",[],["60","61"],"/home/junho/Coding/ateam/src/App.js",[],"/home/junho/Coding/ateam/src/styles/GlobalStyles.js",[],"/home/junho/Coding/ateam/src/styles/Theme.js",[],"/home/junho/Coding/ateam/src/components/organisms/Header.js",[],"/home/junho/Coding/ateam/src/pages/Dashboard.js",["62","63","64","65"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport CardList from \"components/organisms/CardList\";\nimport Select from \"components/atoms/Select\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCardLists, backUpCardLists } from \"reducer/DashboardReducer\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const [isAdviceToggle, setIsAdviceToggle] = useState(true);\n  const { cardLists, resetCardLists, checkedItems } = useSelector(\n    (store) => store.DashboardReducer\n  );\n\n  useEffect(() => {\n    (async function () {\n      const res = await axios.get(\"http://localhost:4000/requests\");\n      const data = await res.data;\n      if (checkedItems.length === 0) {\n        dispatch(getCardLists(data));\n        dispatch(backUpCardLists(data));\n      }\n    })();\n  }, [checkedItems, dispatch]);\n\n  const filterReset = () => {\n    dispatch(getCardLists(resetCardLists));\n  };\n\n  const handleToggleAdviceList = () => {\n    setIsAdviceToggle((props) => !props);\n    if (isAdviceToggle) {\n      const filteredList = cardLists.filter((card) => {\n        return card.status === \"상담중\";\n      });\n      dispatch(getCardLists(filteredList));\n    } else {\n      dispatch(getCardLists(resetCardLists));\n    }\n  };\n\n  const methodCategory = [\"밀링\", \"선반\"];\n  const materialCategory = [\"알루미늄\", \"탄소강\", \"구리\", \"합금강\", \"강철\"];\n\n  return (\n    <Wrap>\n      <div className=\"esWrap\">\n        {/* class명 바꾸기 */}\n        <div className=\"intro\">\n          <h2>들어온 요청</h2>\n          <p>파트너님에게 딱 맞는 요청서를 찾아보세요.</p>\n        </div>\n        <CardList\n          list={cardLists}\n          methodCategory={methodCategory}\n          materialCategory={materialCategory}\n        />\n      </div>\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .esWrap {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 80%;\n  }\n  .intro {\n    display: flex;\n    text-align: left;\n    flex-direction: column;\n    justify-content: center;\n    /* max-width: 1200px; */\n    margin: 20px 0;\n    h2 {\n      font-size: 20px;\n      font-weight: 700;\n      padding: 10px 0;\n    }\n    p {\n      padding: 10px 0;\n    }\n  }\n  @media ${({ theme }) => theme.mobile} {\n    .intro {\n      width: 100%;\n    }\n  }\n`;\n\nexport default Dashboard;\n","/home/junho/Coding/ateam/src/components/atoms/Button.js",[],"/home/junho/Coding/ateam/src/components/molecules/Card.js",[],"/home/junho/Coding/ateam/src/components/atoms/Label.js",[],"/home/junho/Coding/ateam/src/components/organisms/CardList.js",[],"/home/junho/Coding/ateam/src/components/atoms/Select.js",["66"],"/home/junho/Coding/ateam/src/reducer/DashboardReducer.js",[],"/home/junho/Coding/ateam/src/reducer/store.js",[],"/home/junho/Coding/ateam/src/components/atoms/Switch.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":38,"nodeType":"73","messageId":"74","endLine":1,"endColumn":49},{"ruleId":"71","severity":1,"message":"75","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"76","line":27,"column":9,"nodeType":"73","messageId":"74","endLine":27,"endColumn":20},{"ruleId":"71","severity":1,"message":"77","line":31,"column":9,"nodeType":"73","messageId":"74","endLine":31,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":49,"column":6,"nodeType":"80","endLine":49,"endColumn":30,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'filterReset' is assigned a value but never used.","'handleToggleAdviceList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cardLists'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [cardLists, checkedItems, dispatch]",{"range":"87","text":"88"},[1546,1570],"[cardLists, checkedItems, dispatch]"]